#+TITLE: Test particle omeff calculations
#+BEGIN_SRC jupyter-python :session /jpy:localhost#8888:research
  import numpy as np
  import importlib
  import os
  from numpy import sqrt, cos, sin, pi, abs
  import scipy as sp
  import matplotlib as mpl
  import matplotlib.pyplot as plt
  import sys
  sys.path.append("/home/jtlaune/multi-planet-architecture/")
  from mpa.mpl_styles import analytic
  from mpa.series import FOomEffTPSeries
  import mpa.fndefs as fns

  deg_conv = 180./np.pi

  def load_params(filepath):
      spec = importlib.util.spec_from_file_location("_", filepath)
      _ = importlib.util.module_from_spec(spec)
      spec.loader.exec_module(_)
      print(f"Loading run file {filepath} in directory {os.getcwd()}")
      return(np.array(_.RUN_PARAMS))
#+END_SRC

#+RESULTS:

* external 1e-4<omeff<1e-2
*** final eccentricities
#+BEGIN_SRC jupyter-python :session /jpy:localhost#8888:research
  chunk = 16
  projpath = "/home/jtlaune/multi-planet-architecture/projects/omeff/"

  @mpl.rc_context(analytic)
  def plot(iep):
      seriesname = "tpOmEff"
      seriesdir = os.path.join(projpath, seriesname)
      paramsname = seriesname + "-params.py"
      runpath = seriesdir
      series = FOomEffTPSeries(
          seriesname, runpath, load=True, verbose=True, overwrite=False, loadall=False
      )
      params = series.RUN_PARAMS
      fig, ax = plt.subplots()
      ax.axvline(x=-(1e-4)**(2./3),ls="--",c="k",lw=2)
      j = 2

      for i in range(iep*chunk, (iep+1)*chunk):
          prescomEff = float(params[i, -1])  # prescribed omext1
          sim = series.data[i]
          teval = sim["teval"]
          ti = int(len(teval) * 0.9)
          diffom = np.abs(sim["g2"][ti:] - sim["g1"][ti:])  # actual
          avgDom = np.average(diffom)  # average
          theta  = sim["thetap"][ti:]
          a1     = sim["a1"][ti:]
          a2     = sim["a2"][ti:]
          e1     = sim["e1"][ti:]
          e2     = sim["e2"][ti:]
          g1     = sim["g1"][ti:]
          g2     = sim["g2"][ti:]
          e1avg = np.average(e1)
          e2avg = np.average(e2)
          f1 = fns.f27lc(a1/a2, j)
          f2 = fns.f31lc(a1/a2, j)
          theta1 = (theta+g1)%(2*np.pi)
          theta2 = (theta+g2)%(2*np.pi)
          hattheta1 = np.arctan2(e1*sin(theta1) + f2/f1*e2*sin(theta2),
                                e1*cos(theta1) + f2/f1*e2*cos(theta2))
          inres = 1-2*np.all(np.abs(theta1) > 1.)
          #ax.scatter(prescomEff, e1avg, c="k", s=10)
          ax.axhline(y=e1avg, lw=2, ls="--", c="k")
          ax.scatter(prescomEff, inres*e2avg, c="r", s=20)
          # ax.scatter(prescomEff, avgDom, c="r", s=20)
          # ax.scatter(teval, diffom, c="k", s=10)

      ax.set_ylim(0., 0.1)
      ax.text(0.1, 0.9, r"$e_p=$"+f"{e1avg:0.2f}", transform=ax.transAxes, fontsize=16)
      ax.legend()
      figfp = os.path.join(seriesdir, "final-ecc-states.png")
      fig.savefig(figfp, bbox_inches="tight")
      ax.set_title(
          r"Final $e$ values for varying $\dot\varpi_{\rm eff}$", pad=20
      )
      ax.set_xlabel(r"$\dot\varpi_{\rm eff}$")
      ax.set_ylabel(r"final eccentricity (numerical)")
      figname = f"external-tp-ep{e1avg:0.2f}.png"
      fig.savefig(os.path.join(projpath, figname), bbox_inches="tight")


  for iep in range(6): plot(iep)
#+END_SRC

#+RESULTS:
:RESULTS:
: No handles with labels found to put in legend.
: No handles with labels found to put in legend.
: No handles with labels found to put in legend.
: No handles with labels found to put in legend.
: No handles with labels found to put in legend.
: No handles with labels found to put in legend.
#+attr_org: :width 460
[[file:./.ob-jupyter/dd4089b2625ad24695cfc180a031eb8495c37ab8.png]]
#+attr_org: :width 460
[[file:./.ob-jupyter/dceed43fc679751237258823ee0dcc413953d67f.png]]
#+attr_org: :width 460
[[file:./.ob-jupyter/7be60d69ddc8f36d0b311937ed705f77fef80576.png]]
#+attr_org: :width 460
[[file:./.ob-jupyter/1c4806d8ccb7f112e4595bdb3c3e2f5d75a1d30e.png]]
#+attr_org: :width 460
[[file:./.ob-jupyter/6ad11c2cdf2be1eda9b8dff09bb32eb1018cd570.png]]
#+attr_org: :width 460
[[file:./.ob-jupyter/9c08bb13d707702d0be3fc5304e8d25faff01ff6.png]]
:END:
