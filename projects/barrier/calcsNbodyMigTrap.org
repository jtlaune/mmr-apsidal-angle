Preamble
#+BEGIN_SRC jupyter-python :session /jpy:localhost#8888:research
  import importlib
  import matplotlib as mpl
  import matplotlib.pyplot as plt
  import matplotlib_inline
  import rebound
  import os
  import numpy as np
  import sys
  
  from matplotlib import ticker

  sys.path.append("/home/jtlaune/multi-planet-architecture/")
  import mpa
  from mpa.nbody import NbodyMigTrapSeries
  from mpa.mpl_styles import analytic
#+END_SRC

#+RESULTS:

load sim
#+BEGIN_SRC jupyter-python :session /jpy:localhost#8888:research
  # get run dir information
  # seriesname is simulation "series"
  os.chdir("/home/jtlaune/multi-planet-architecture/projects/barrier/")

  cwdpath = os.path.abspath(os.getcwd())
  # projpath, _ = os.path.split(cwdpath)
  projpath = cwdpath

  seriesname = "tpVaryEccP"
  seriesdir = os.path.join(projpath, seriesname)
  paramsname = seriesname + "-params.py"
  runpath = seriesdir
  series = NbodyMigTrapSeries(
      seriesname, runpath, load=True, verbose=True, overwrite=False
  )
  params = series.RUN_PARAMS
  print(params)
  Nsims = len(params[:,0])

  for irun in range(Nsims):
      N_tps = int(float(float(params[irun,14])))
      Nout = int(float(params[irun,15]))
      mup = float(float(params[irun,2]))
      Te = float(float(params[irun,6]))
      Tm = float(float(params[irun,7]))
      da_tps = float(float(params[irun,16]))

      @mpl.rc_context(analytic)
      def plotfunc():
          fig, ax = plt.subplots()
          data = series.data[irun]
          for i in range(N_tps):
              teval = data["teval"]
              smas = data["smas"]
              ax.plot(teval, smas[:,i])
          ax.xaxis.set_major_locator(ticker.MaxNLocator(5))
          ax.xaxis.set_major_formatter(ticker.StrMethodFormatter("{x:0.1E}"))
          for j in range(1,15): plt.axhline(y=((j+1)/j)**(2./3), ls="--", c="k",lw=0.5)
          plt.text(
              0.05,
              0.95,
              r"$T_e=$" + f"{float(Te):0.1E}\n"
              r"$T_m=$" + f"{float(Tm):0.1E}",
              size=16,
              transform=ax.transAxes,
              horizontalalignment="left",
              verticalalignment="top"
          )
          plt.title(r"$\mu_p=$" +f"{mup}")
          plt.xticks(rotation=45)


      plotfunc()
#+END_SRC

#+RESULTS:
:RESULTS:
: [['0.03' '1.0' '0.0001' '1.0' '1.2' '10000.0' '1000.0' '100000.0' '0.0'
:   '0.0' 'ep0.000' 'mup1.00e-04' '0.0' '0.0' '5.0' '1000.0' '0.1']
:  ['0.03' '1.0' '1e-05' '1.0' '1.2' '10000.0' '1000.0' '100000.0' '0.0'
:   '0.0' 'ep0.000' 'mup1.00e-05' '0.0' '0.0' '5.0' '1000.0' '0.1']
:  ['0.03' '1.0' '1e-06' '1.0' '1.2' '10000.0' '1000.0' '100000.0' '0.0'
:   '0.0' 'ep0.000' 'mup1.00e-06' '0.0' '0.0' '5.0' '1000.0' '0.1']
:  ['0.03' '1.0' '1e-07' '1.0' '1.2' '10000.0' '1000.0' '100000.0' '0.0'
:   '0.0' 'ep0.000' 'mup1.00e-07' '0.0' '0.0' '5.0' '1000.0' '0.1']
:  ['0.03' '1.0' '1e-08' '1.0' '1.2' '10000.0' '1000.0' '100000.0' '0.0'
:   '0.0' 'ep0.000' 'mup1.00e-08' '0.0' '0.0' '5.0' '1000.0' '0.1']]
#+attr_org: :width 433
[[file:./.ob-jupyter/2c4f5e9380a1ef112851e3b4c6f27b79e5fa75c3.png]]
#+attr_org: :width 433
[[file:./.ob-jupyter/b23fb7d7eb976a82521ac274b15e7abdb9032ab5.png]]
#+attr_org: :width 433
[[file:./.ob-jupyter/5ee6291c5e12662aaaa2ed295aad9774c7ab79d3.png]]
#+attr_org: :width 433
[[file:./.ob-jupyter/e34d46ddd5575e4c1e380654df66f084cfcbb203.png]]
#+attr_org: :width 433
[[file:./.ob-jupyter/553600b00bc8fee63ca9463575e4cbe9fdc2a35b.png]]
:END:

#+BEGIN_SRC jupyter-python :session /jpy:localhost#8888:research
  "{:E}".format(3)
#+END_SRC

#+RESULTS:
: 3.000000E+00
